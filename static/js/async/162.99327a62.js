"use strict";(self.webpackChunk_cloud_push_docs=self.webpackChunk_cloud_push_docs||[]).push([["162"],{7611:function(e,n,l){l.r(n),l.d(n,{default:()=>d});var i=l(651),r=l(6971);function s(e){let n=Object.assign({h1:"h1",a:"a",h2:"h2",code:"code",pre:"pre",hr:"hr",h3:"h3",blockquote:"blockquote",p:"p",strong:"strong"},(0,r.ah)(),e.components);return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsxs)(n.h1,{id:"custom",children:["Custom",(0,i.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#custom",children:"#"})]}),"\n",(0,i.jsxs)(n.h2,{id:"create-custom-storageclient",children:["Create Custom ",(0,i.jsx)(n.code,{children:"StorageClient"}),(0,i.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#create-custom-storageclient",children:"#"})]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-ts",children:'import { StorageClient } from "@cloud-push/cloud";\n\nconst storageClient: StorageClient = {\n    getFile: () => {},\n    getFileSignedUrl: () => {},\n    uploadDirectory: () => {},\n    uploadFile: () => {},\n    uploadLocalFile: () => {},\n};\n'})}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsxs)(n.h3,{id:"getfile",children:[(0,i.jsx)(n.code,{children:"getFile"}),(0,i.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#getfile",children:"#"})]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-ts",children:"getFile({ key }: { key: string }): Promise<Uint8Array>\n"})}),"\n",(0,i.jsxs)(n.blockquote,{children:["\n",(0,i.jsxs)(n.p,{children:["Fetches the file associated with the specified ",(0,i.jsx)(n.code,{children:"key"})," from cloud storage and returns it as a ",(0,i.jsx)(n.code,{children:"Uint8Array"}),"."]}),"\n"]}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsxs)(n.h3,{id:"getfilesignedurl",children:[(0,i.jsx)(n.code,{children:"getFileSignedUrl"}),(0,i.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#getfilesignedurl",children:"#"})]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-ts",children:"getFileSignedUrl({ key, expiresIn }: { key: string; expiresIn?: number }): Promise<string>\n"})}),"\n",(0,i.jsxs)(n.blockquote,{children:["\n",(0,i.jsxs)(n.p,{children:["Generates and returns a ",(0,i.jsx)(n.strong,{children:"signed URL"})," to access the specified file.\n",(0,i.jsx)(n.code,{children:"expiresIn"})," (optional) sets the expiration time of the URL in seconds."]}),"\n"]}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsxs)(n.h3,{id:"uploadfile",children:[(0,i.jsx)(n.code,{children:"uploadFile"}),(0,i.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#uploadfile",children:"#"})]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-ts",children:"uploadFile({\n  key,\n  file,\n  contentType,\n}: {\n  key: string;\n  file: Uint8Array;\n  contentType?: string;\n}): Promise<void>\n"})}),"\n",(0,i.jsxs)(n.blockquote,{children:["\n",(0,i.jsxs)(n.p,{children:["Uploads a file in ",(0,i.jsx)(n.code,{children:"Uint8Array"})," format to cloud storage.\nYou can optionally specify the MIME type via ",(0,i.jsx)(n.code,{children:"contentType"})," (default: ",(0,i.jsx)(n.code,{children:'"application/json"'}),")."]}),"\n"]}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsxs)(n.h3,{id:"uploadlocalfile",children:[(0,i.jsx)(n.code,{children:"uploadLocalFile"}),(0,i.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#uploadlocalfile",children:"#"})]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-ts",children:"uploadLocalFile({\n  fileName,\n  filePath,\n}: {\n  fileName: string;\n  filePath: string;\n}): Promise<string | undefined>\n"})}),"\n",(0,i.jsxs)(n.blockquote,{children:["\n",(0,i.jsxs)(n.p,{children:["Uploads a file from a local path ",(0,i.jsx)(n.strong,{children:"using a stream"}),", and returns the uploaded object's URL."]}),"\n"]}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsxs)(n.h3,{id:"uploaddirectory",children:[(0,i.jsx)(n.code,{children:"uploadDirectory"}),(0,i.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#uploaddirectory",children:"#"})]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-ts",children:"uploadDirectory({\n  cloudPath,\n  directoryPath,\n}: {\n  cloudPath: string;\n  directoryPath: string;\n}): Promise<void>\n"})}),"\n",(0,i.jsxs)(n.blockquote,{children:["\n",(0,i.jsx)(n.p,{children:"Uploads all files in a local directory to cloud storage."}),"\n"]}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsxs)(n.h2,{id:"examples",children:["Examples",(0,i.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#examples",children:"#"})]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-ts",children:'import { defineConfig } from "@cloud-push/expo";\nimport { StorageClient } from "@cloud-push/cloud";\n\nconst storageClient: StorageClient = {\n    getFile: () => {},\n    getFileSignedUrl: () => {},\n    uploadDirectory: () => {},\n    uploadFile: () => {},\n    uploadLocalFile: () => {},\n};\n\nconst dbClient: DbClient = {\n  create: () => {},\n  delete: () => {},\n  find: () => {},\n  findAll: () => {},\n  readAll: () => {},\n  toUint8Array: () => {},\n  update: () => {},\n};\n\nexport default defineConfig(() => ({\n  storage: storageClient,\n  db: dbClient,\n}));\n'})})]})}function t(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},{wrapper:n}=Object.assign({},(0,r.ah)(),e.components);return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(s,{...e})}):s(e)}let d=t;t.__RSPRESS_PAGE_META={},t.__RSPRESS_PAGE_META["guide%2F4.cloud%2F1.storageClients%2F4.Custom.md"]={toc:[{text:"Create Custom `StorageClient`",id:"create-custom-storageclient",depth:2},{text:"`getFile`",id:"getfile",depth:3},{text:"`getFileSignedUrl`",id:"getfilesignedurl",depth:3},{text:"`uploadFile`",id:"uploadfile",depth:3},{text:"`uploadLocalFile`",id:"uploadlocalfile",depth:3},{text:"`uploadDirectory`",id:"uploaddirectory",depth:3},{text:"Examples",id:"examples",depth:2}],title:"Custom",headingTitle:"Custom",frontmatter:{}}}}]);