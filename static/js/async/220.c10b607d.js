"use strict";(self.webpackChunk_cloud_push_docs=self.webpackChunk_cloud_push_docs||[]).push([["220"],{8609:function(e,n,l){l.r(n),l.d(n,{default:()=>r});var d=l(651),s=l(6971);function o(e){let n=Object.assign({h1:"h1",a:"a",h2:"h2",p:"p",code:"code",pre:"pre",hr:"hr",h3:"h3"},(0,s.ah)(),e.components);return(0,d.jsxs)(d.Fragment,{children:[(0,d.jsxs)(n.h1,{id:"lowdb",children:["Lowdb",(0,d.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#lowdb",children:"#"})]}),"\n",(0,d.jsxs)(n.h2,{id:"lowdbclient",children:["LowdbClient",(0,d.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#lowdbclient",children:"#"})]}),"\n",(0,d.jsxs)(n.p,{children:["The ",(0,d.jsx)(n.code,{children:"LowdbClient"})," helps manage versioning of bundles using a JSON file. It is designed to work alongside a ",(0,d.jsx)(n.code,{children:"storageClient"}),"."]}),"\n",(0,d.jsx)(n.pre,{children:(0,d.jsx)(n.code,{className:"language-ts",children:'import { LowDbClient } from "@cloud-push/cloud";\n\nconst dbClient = new LowDbClient({\n  downloadJSONFile: () => storageClient.getFile({ key: "cursor.json" }),\n  uploadJSONFile: (file: Uint8Array) =>\n    storageClient.uploadFile({ key: "cursor.json", file }),\n});\n'})}),"\n",(0,d.jsx)(n.hr,{}),"\n",(0,d.jsxs)(n.h3,{id:"downloadjsonfile",children:[(0,d.jsx)(n.code,{children:"downloadJSONFile"}),(0,d.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#downloadjsonfile",children:"#"})]}),"\n",(0,d.jsx)(n.pre,{children:(0,d.jsx)(n.code,{className:"language-ts",children:"downloadJSONFile(): Promise<void>\n"})}),"\n",(0,d.jsx)(n.p,{children:"Downloads the JSON file used for version management."}),"\n",(0,d.jsx)(n.hr,{}),"\n",(0,d.jsxs)(n.h3,{id:"uploadjsonfile",children:[(0,d.jsx)(n.code,{children:"uploadJSONFile"}),(0,d.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#uploadjsonfile",children:"#"})]}),"\n",(0,d.jsx)(n.pre,{children:(0,d.jsx)(n.code,{className:"language-ts",children:"uploadJSONFile(file: Uint8Array): Promise<void>\n"})}),"\n",(0,d.jsx)(n.p,{children:"Uploads the JSON file used for version management."}),"\n",(0,d.jsx)(n.hr,{}),"\n",(0,d.jsxs)(n.h2,{id:"examples",children:["Examples",(0,d.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#examples",children:"#"})]}),"\n",(0,d.jsx)(n.pre,{children:(0,d.jsx)(n.code,{className:"language-ts",children:'import { defineConfig } from "@cloud-push/expo";\nimport { AWSS3StorageClient, LowDbClient } from "@cloud-push/cloud";\n\nconst storageClient = new AWSS3StorageClient({\n  accessKeyId: process.env.AWS_ACCESS_KEY_ID!,\n  bucketName: process.env.AWS_BUCKET_NAME!,\n  region: process.env.AWS_REGION!,\n  secretAccessKey: process.env.AWS_SECRET_ACCESS_KEY!,\n});\n\nconst dbClient = new LowDbClient({\n  downloadJSONFile: () => storageClient.getFile({ key: "cursor.json" }),\n  uploadJSONFile: (file: Uint8Array) =>\n    storageClient.uploadFile({ key: "cursor.json", file }),\n});\n\nexport default defineConfig(() => ({\n  storage: storageClient,\n  db: dbClient,\n}));\n'})})]})}function i(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},{wrapper:n}=Object.assign({},(0,s.ah)(),e.components);return n?(0,d.jsx)(n,{...e,children:(0,d.jsx)(o,{...e})}):o(e)}let r=i;i.__RSPRESS_PAGE_META={},i.__RSPRESS_PAGE_META["guide%2F4.cloud%2F2.dbClients%2F1.Lowdb.md"]={toc:[{text:"LowdbClient",id:"lowdbclient",depth:2},{text:"`downloadJSONFile`",id:"downloadjsonfile",depth:3},{text:"`uploadJSONFile`",id:"uploadjsonfile",depth:3},{text:"Examples",id:"examples",depth:2}],title:"Lowdb",headingTitle:"Lowdb",frontmatter:{}}}}]);